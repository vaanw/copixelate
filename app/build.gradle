plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlin_version"
    id 'com.google.devtools.ksp' version "$ksp_version"
    id 'com.google.gms.google-services'
    id 'com.google.protobuf' version '0.9.4'
}

android {
    namespace 'com.copixelate'
    compileSdk 34

    defaultConfig {
        applicationId 'com.copixelate'
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName '0.0.1'

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        // Room database schema export location
        ksp { arg('room.schemaLocation', "$projectDir/schemas".toString()) }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.3'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation project(':art')

    // Kotlin
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.0'
    implementation "com.google.devtools.ksp:symbol-processing-api:$ksp_version"

    // ViewModel
    def lifecycle_version = '2.6.2'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"

    // Compose
    // Bill of Materials, https://developer.android.com/jetpack/compose/bom
    implementation platform('androidx.compose:compose-bom:2023.09.02')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.compose.material:material-icons-extended'
    implementation 'androidx.activity:activity-compose:1.7.2'
    implementation 'androidx.navigation:navigation-compose:2.7.3'

    // Proto DataStore
    implementation 'androidx.datastore:datastore:1.0.0'
    implementation 'com.google.protobuf:protobuf-javalite:3.24.3'

    // Room
    def room_version = '2.5.2'
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    // To use Kotlin Symbol Processing (KSP)
    ksp "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    // optional - Paging 3 Integration
    implementation "androidx.room:room-paging:$room_version"

    // Google Play Services
    implementation 'com.google.android.gms:play-services-auth:20.7.0'
    // Firebase
    // Bill of Materials, firebase.google.com/support/release-notes/android
    implementation platform('com.google.firebase:firebase-bom:32.3.1')
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-database-ktx'

    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    // Compose Testing
    androidTestImplementation platform('androidx.compose:compose-bom:2023.09.02')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
}

// Protobuf lite code generation
protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.24.3'
    }
    generateProtoTasks {
        all().configureEach { task ->
            task.builtins {
                java {
                    option "lite"
                }
            }
        }
    }
}
